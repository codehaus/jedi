<project name="jedi stormtrooper example" basedir="." default="compile">
    <property name="lib" location="../.."/>
    
    <property name="1.4_jar_file" location="${lib}/Jedi_@version.number@_jdk1.4.jar"/>
    <property name="1.5_jar_file" location="${lib}/Jedi_@version.number@_jdk1.5.jar"/>

    <property name="java.src.dir" location="src"/>
	
    <property name="build.dir" value="build"/>
    
    <property name="build.1.4.dir" value="${build.dir}/1.4"/>
    <property name="build.1.4.classes.dir" value="${build.1.4.dir}/classes"/>
    <property name="build.1.4.preprocess.dir" value="${build.1.4.dir}/preprocess"/>
    
    <property name="build.1.5.dir" value="${build.dir}/1.5"/>
    <property name="build.1.5.classes.dir" value="${build.1.5.dir}/classes"/>
    <property name="build.1.5.preprocess.dir" value="${build.1.5.dir}/preprocess"/>

    <target name="init">
        <tstamp/>
    </target>

    <target name="clean" depends="init" description="Clean the build">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile_1.4" depends="init">
        <mkdir dir="${build.1.4.dir}"/>
        <mkdir dir="${build.1.4.preprocess.dir}"/>
        <mkdir dir="${build.1.4.classes.dir}"/>
        
        <apt srcdir="${java.src.dir}"
             classpath="${1.5_jar_file}"
             compile="false"
             preprocessdir="${build.1.4.preprocess.dir}">
            <factorypath>
                <pathelement location="${1.5_jar_file}"/>
            </factorypath>
        </apt>
        
        <javac destdir="${build.1.4.classes.dir}" debug="on" target="jsr14">
            <classpath>
            	<pathelement location="${1.4_jar_file}"/>
            </classpath>

            <src path="${java.src.dir}"/>
            <src path="${build.1.4.preprocess.dir}"/>
        </javac>
    </target>

    <target name="compile_1.5" depends="init">
        <mkdir dir="${build.1.5.dir}"/>
        <mkdir dir="${build.1.5.preprocess.dir}"/>
        <mkdir dir="${build.1.5.classes.dir}"/>
        
        <apt srcdir="${java.src.dir}"
        	 destdir="${build.1.5.classes.dir}"
        	 debug="on"
             classpath="${1.5_jar_file}"
             compile="false"
             preprocessdir="${build.1.5.preprocess.dir}">
            <factorypath>
                <pathelement location="${1.5_jar_file}"/>
            </factorypath>
            <classpath>
                <pathelement location="${1.5_jar_file}"/>
            </classpath>
            <src path="${java.src.dir}"/>
            <src path="${build.1.5.preprocess.dir}"/>
        	<!--
        		Uncomment one or both of these two compilerargs if you want to reduce
        		the clutter in the generated method names.
        		We have to do it this way because of a bug in the apt task in Ant 1.7
        	-->
        	<!--
        	<compilerarg value="-AjediSuppressAccessorVerbs"/>
        	<compilerarg value="-AjediSuppressSuffixes"/>
        	-->
        </apt>
    </target>

    <target name="compile" depends="init, compile_1.4, compile_1.5"/>
</project>