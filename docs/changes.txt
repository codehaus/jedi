Version Change
2.1     Add SithMethods to wrap a bunch of Sith annotations because you can only use an annotation once on a particular element
		When generating Sith factories, if the package of the target class begins with 'java.', replace that prefix with 'sith.'
		Making Assert constructor protected, so it can be extended
		Added FunctionalPrimitives.pop()
		Added FunctionalPrimitives.tabulate()
		Added FunctionalPrimitives.takeMiddle()

2.2     Added license.txt (MIT)
        Removal of unnecessary suppress warnings on FunctionalPrimitives
        FunctionalPrimitives.join now supports a default delimiter (empty string) and more closely matches Ruby's Array.join behaviour
		
2.3		Applied Dante's patch for FunctionalPrimitives.last() functions

2.4		Added Option
		Added jediSuppressAccessorVerbs and jediSuppressSuffixes APT / javac options

2.5		@JediFunctor and @JediFilter annotations can now be used to annotate non-private fields.
		Generated factories have Javadoc with links to the annotated methods.

2.6		Improved handling of generics in code generation. Still not perfect.
		Replaced collections with iterables everywhere possible. JDK1.4 compatibility cannot now be achieved.